/****
Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

Note: For the purpose of this problem, we define empty string as valid palindrome.

Example 1:

Input: "A man, a plan, a canal: Panama"
Output: true

Example 2:

Input: "race a car"
Output: false

 

Constraints:

    s consists only of printable ASCII characters.

****/

class Solution {
public:
    bool isPalindrome(string s) {
        int l=s.length();
        if(l==0)
        {
            return true;
        }
        for(int i=0;i<l;i++)
        {
            s[i]=tolower(s[i]);   //convert every upper case to lower case
        }
        string s2;
        for(int i=0;i<l;i++)   // now push every char except special characters
        {
            if(s[i]>='a' && s[i]<='z' || s[i]>='0' && s[i]<='9')
            {
                s2.push_back(s[i]);
            }
        }
        string s3=s2;   //make s3 equal to s2
        reverse(s2.begin(),s2.end()); //reverse s2
        if(s3==s2)  //if reverse and original are equal then palindrome
        {
            return true;
        }
        return false;
    }
};
